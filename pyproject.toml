[tool.poetry]
name = "hades"
version = "3.0"
description = "Backend server and data processing apps"
authors = ["Sushant Kumar <sushant.mithila@gmail.com>", "Rajeev Ranjan <ranjanrajee@gmail.com>"]
license = "LICENSE"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
numpy = "1.21.0"
pandas = "1.3.0"
redis = "^3.5.3"
hiredis = "^2.0.0"
PyJWT = "^2.1.0"
scikit-learn = "0.24.2"
pydantic = {extras = ["email", "typing_extensions", "dotenv"], version = "^1.8.2"}
python-jose = {extras = ["cryptography"], version = "^3.2.0"}
sanic = "^21.6.0"
sanic-cors = "^1.0.0"
orjson = "^3.5.4"
devtools = {extras = ["pygments"], version = "^0.6.1"}

[tool.poetry.dev-dependencies]
pytest = "^5.2"
black = "^21.5b1"
isort = "^5.8.0"
matplotlib = "3.4.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = [
    "error",
]
testpaths = [
    "tests",
    "integration",
]

[tool.black]
line-length = 100
exclude = "(.eggs|.git|.hg|.mypy_cache|.pytest_cache|.ipynb_checkpoints|.nox|.tox|.venv|.svn|_build|buck-out|build|dist)"

[tool.isort]
profile = "black"
src_paths = ["hades", "tests"]
line_length = 100

[tool.pyright]
include = ["hades"]
extraPaths = ["hades"]
exclude = [".venv", "**/__pycache__"]
reportTypeshedErrors = false
reportUnboundVariable = "none"
reportMissingImports = true
reportMissingTypeStubs = false
reportGeneralTypeIssues = "none"
reportOptionalSubscript = false
reportOptionalIterable = false
reportOptionalOperand = false
executionEnvironments = [
  { root = "./", extraPaths = ["hades"], exclude = [".venv", "**/__pycache__"] }
]
